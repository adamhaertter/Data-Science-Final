---
title: "Final Project Work"
author: "Adam Haertter & Brennan Mulligan"
format: html
---

```{r lib}
#| message: false
#| echo: false

library("tidyverse")
library("rvest")
library("magrittr")
```

## Scraping

```{r}
#link <- "https://www.vgchartz.com/games/games.php?name=&keyword=&console=&region=All&developer=&publisher=&goty_year=&genre=&boxart=Both&banner=Both&ownership=Both&showmultiplat=No&results=100000&order=Sales&showtotalsales=1&showpublisher=1&showvgchartzscore=1&shownasales=1&showdeveloper=1&showcriticscore=1&showpalsales=1&showreleasedate=1&showuserscore=1&showjapansales=1&showlastupdate=1&showothersales=1&showshipped=1"

action_query <- "https://www.vgchartz.com/games/games.php?name=&keyword=&console=&region=All&developer=&publisher=&goty_year=&genre=Action&boxart=Both&banner=Both&ownership=Both&showmultiplat=No&results=10000&order=Sales&showtotalsales=1&showpublisher=1&showvgchartzscore=0&showvgchartzscore=1shownasales=1&showdeveloper=1&showcriticscore=1&showpalsales=1&showreleasedate=1&showuserscore=1&showjapansales=1&showlastupdate=1&showothersales=1&showshipped=1"
action_adv_query <- "https://www.vgchartz.com/games/games.php?name=&keyword=&console=&region=All&developer=&publisher=&goty_year=&genre=Action-Adventure&boxart=Both&banner=Both&ownership=Both&showmultiplat=No&results=10000&order=Sales&showtotalsales=1&showpublisher=1&showvgchartzscore=0&showvgchartzscore=1shownasales=1&showdeveloper=1&showcriticscore=1&showpalsales=1&showreleasedate=1&showuserscore=1&showjapansales=1&showlastupdate=1&showothersales=1&showshipped=1"


scraper <- function(genre) {
  url <- paste("https://www.vgchartz.com/games/games.php?name=&keyword=&console=&region=All&developer=&publisher=&goty_year=&genre=", genre, "&boxart=Both&banner=Both&ownership=Both&showmultiplat=No&results=10000&order=Sales&showtotalsales=1&showpublisher=1&showvgchartzscore=0&showvgchartzscore=1shownasales=1&showdeveloper=1&showcriticscore=1&showpalsales=1&showreleasedate=1&showuserscore=1&showjapansales=1&showlastupdate=1&showothersales=1&showshipped=1", sep = "") 
  table <- url %>%
    read_html() %>%
    html_nodes(xpath = "/html/body/div[4]/div/div[2]/table") %>%
    html_table()
  output <- table#[[1]]
  output
}

#table <- link %>% read_html() %>% html_nodes("/html/body/div[4]/div/div[2]/table") %>% html_table() %>% .[[1]]

action <- scraper("Action")
```
# Tidying Data
```{r}
genres <- c("Action", "Action-Adventure", "Adventure", "Board Game", "Education", "Fighting", "Misc", "MMO", "Music", "Party", "Platform", "Puzzle", "Racing", "Role-Playing", "Sandbox", "Shooter", "Simulation", "Sports", "Strategy", "Visual Novel")

load_add_genre <- function(genre) {
  path <- paste("data/raw/", genre %>% str_replace_all(" ", "_"), ".csv", sep = "")
  readfile <- read.csv(path, skip = 2) %>%
    mutate("Genre" = genre) %>%
    subset(select = -`Box.Art`)
  readfile
}

master <- tibble()
for(genre in genres) {
  raw_list <- genre %>% load_add_genre()
  master %<>% bind_rows(raw_list)
}


```

```{r}

parse_year <- function(date) {
  years <- date %>% substr(10, 11) %>% as.numeric()
  for (i in seq_along(years)) {
    if(is.na(years[i])) {
      # Do nothing
    }
    else if(years[i] >= 50)
      years[i] <- years[i] + 1900
    else
      years[i] <- years[i] + 2000
    }
  years
}

month_key <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
parse_month <- function(date) {
  months <- date %>% substr(6, 8)
  for (i in seq_along(months)) {
    month_id <- match(months[i], month_key)
    if(!is.na(month_id)) {
      months[i] = month_id
    }
  } 
  months %>% as.numeric()
}

parse_day <- function(date) {
  date %>% substr(1,2) %>% as.numeric()
}

# Remove "Read the review" from Title
master$Game %<>% str_replace_all("    Read the review", "")
# Replace "N/A" with actual NA val
master[2:17] %<>% mutate_all(~na_if(., "N/A"))
# Strip m from counts, convert to ints, put factor in title
master[9:14] %<>% mutate_all(~str_replace_all(., "m", "") %>% as.numeric())
# Combine Total.Sales and Total.Shipped into one column - mutually exclusive
master$Total.Units <- ifelse(!is.na(master$Total.Shipped) & !is.na(master$Total.Sales), 
                             NA, 
                             ifelse(!is.na(master$Total.Shipped), 
                                    master$Total.Shipped, 
                                    master$Total.Sales))
# Split dates into m d y
master %<>% mutate("Release.Year" = Release.Date %>% parse_year()) %>% 
            mutate("Release.Month" = Release.Date %>% parse_month()) %>%
            mutate("Release.Day" = Release.Date %>% parse_day()) %>%
            mutate("Updated.Year" = Last.Update %>% parse_year()) %>% 
            mutate("Updated.Month" = Last.Update %>% parse_month()) %>%
            mutate("Updated.Day" = Last.Update %>% parse_day()) %>%
# Remove unnecessary columns
subset(select = -c(`Release.Date`, `Last.Update`, `Total.Sales`, `Total.Shipped`))
# Rename Total.Units (combined) to Total.Sales for consistency
colnames(master)[colnames(master)=="Total.Units"] <- "Total.Sales"

# Reorder columns logically
master <-master[, c("Pos", "Game", "Console", "Genre", "Publisher", "Developer", "Total.Sales", "NA.Sales", "PAL.Sales", "Japan.Sales", "Other.Sales", "Release.Year", "Release.Month", "Release.Day", "VGChartz.Score", "Critic.Score", "User.Score", "Updated.Year", "Updated.Month", "Updated.Day")] 

  
```

You can add options to executable code like this 

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
