---
title: "Final Project Work"
author: "Adam Haertter & Brennan Mulligan"
format: html
---

# Initial Steps

```{r lib}
#| message: false
#| echo: false

library("tidyverse")
library("rvest")
library("magrittr")
library("here")
```

## Scraping Data

See our [Python scraper](scripts/scrape_vgchartz.py). VGChartz renders its data through a JavaScript table, so the data itself is not accessible through the native HTML for R scraping.

## Wrangling Data

See [wrangle_data.R](scripts/wrangle_data.R).

> You shouldn't need to run this line unless the `data/wrangled/` dir is empty.

```{r}
source("scripts/wrangle_data.R")
```

## Loading Data into Environment

Rerun this if you need to reset the master table. The dataframe with all info is called `master`

```{r}
load(file = here("data", "wrangled", "wrangled_data.rda"))
```

# Data Analysis

Most popular genres by publisher.

```{r}
#master %>% group_by(Publisher, Genre) %>% 
#  summarize("sum" = sum(Total.Sales)) %>% 
#  drop_na() %>% arrange(sum) %>%
#  filter(sum > 0.00) 

publishers_by_sales <- master[, c(3,5,8)]  %>% drop_na() %>%
  group_by(Publisher.Simple) %>% summarize("Sum.Sales" = sum(Total.Sales)) %>% arrange(desc(Sum.Sales))

# Defining a color scale for genres
colorscale <- c("Action" = "red",
                  "Action-Adventure" = "orange",
                  "Adventure" = "green",
                  "Board Game" = "brown",
                  "Education" = "yellow",
                  "Fighting" = "purple",
                  "Misc" = "gray",
                  "MMO" = "blue",
                  "Music" = "lightblue",
                  "Party" = "pink",
                  "Platform" = "turquoise",
                  "Puzzle" = "lavender",
                  "Racing" = "darkgreen",
                  "Role-Playing" = "gold",
                  "Sandbox" = "beige",
                  "Shooter" = "black",
                  "Simulation" = "lightgreen",
                  "Sports" = "navy",
                  "Strategy" = "olivedrab",
                  "Visual Novel" = "magenta")
# It appears our biggest publishers are Nintendo, Electronic Arts, Activision Blizzard, Ubisoft, and Sony
# Since they are our most successful companies, let's look into what genre is their most successful by sales

publisher_by_genre <- function(publisher) {
  master[, c(3,4,5,8)] %>%
  filter(Console != "Series" & Console != "All" & Publisher.Simple == publisher & Genre != "Misc") %>%
  drop_na() %>%
  group_by(Genre) %>% summarize("Sum.Sales" = sum(Total.Sales)) %>% arrange(desc(Sum.Sales))
}

sales_by_genre_plot <- function(publisher) {
  ggplot(publisher_by_genre(publisher), aes(x = reorder(Genre, -Sum.Sales), y = Sum.Sales, fill = Genre)) + geom_bar(stat = "identity", position = position_dodge()) + theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) + labs(x = "Genre", y = "Sales", title = paste(publisher, "Sales By Genre")) + scale_fill_manual(values = colorscale, guide = "none")
}

save_genre_plot <- function(publisher) {
  savable <- sales_by_genre_plot(publisher)
  publisher %<>% tolower() %>% str_replace_all(" ", "_")
  save(savable, file = here("plots", "genre_v_publisher", paste(publisher, "_sales_by_genre.rda", sep = "")))
  ggsave(here("plots", "genre_v_publisher", paste(publisher, "_sales_by_genre.png", sep = "")))
  savable
}

save_genre_plot("Nintendo")
save_genre_plot("Electronic Arts")
save_genre_plot("Activision Blizzard")
save_genre_plot("Ubisoft")
save_genre_plot("Sony")


# Most popular genres
master_without_misc <- master %>% filter(Genre != "Misc")
popular_genres_data <- as.data.frame(sort(table(master_without_misc$Genre)), decreasing = TRUE)

savable <- ggplot(popular_genres_data, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
  geom_bar(stat = "identity") + theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
  labs(x = "Genre", y = "Games Published", title = "Most Popular Genres") + 
  scale_fill_manual(values = colorscale, guide = "none")
save(savable, file = here("plots", "genre_v_publisher", "most_popular_genre.rda"))
ggsave(here("plots", "genre_v_publisher", "most_popular_genre.png"))
savable

# Highest Selling Genres
genres_by_sales <- master_without_misc[, c(3,4,5,8)]  %>% drop_na() %>%
  group_by(Genre) %>% summarize("Sum.Sales" = sum(Total.Sales)) %>% arrange(desc(Sum.Sales))

savable <- ggplot(genres_by_sales, aes(x = reorder(Genre, -Sum.Sales), y = Sum.Sales, fill = Genre)) +
  geom_bar(stat = "identity") + theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
  labs(x = "Genre", y = "Sales", title = "Highest Selling Genres") +
  scale_fill_manual(values = colorscale, guide = "none")
save(savable, file = here("plots", "genre_v_publisher", "highest_selling_genre.rda"))
ggsave(here("plots", "genre_v_publisher", "highest_selling_genre.png"))
savable

# Highest Selling Genre By Publisher
genre_counter <- data.frame(Sales = integer(), Genre = character(), 
                            stringsAsFactors = FALSE)
publisher_size <- length(publishers_by_sales$Publisher.Simple)
for(i in 1:publisher_size) {
  this_pub <- publisher_by_genre(publishers_by_sales$Publisher.Simple[i])
  genre_counter <- 
    data.frame(lapply(genre_counter,as.character),stringsAsFactors = FALSE)
  genre_counter <- 
    rbind(genre_counter,c(this_pub$Genre[1],
                          this_pub$Sum.Sales[1]))
}

colnames(genre_counter) <- c("Genre", "Sales")
genre_counter %<>% drop_na() %>%
  group_by(Genre) %>% filter(Genre != "Misc") %>%
  mutate("count" = n()) %>%
  .[, c(1,3)] %>% unique()

savable <- ggplot(genre_counter, aes(x = reorder(Genre, -count), y = count, fill = Genre)) +
  geom_bar(stat = "identity") + 
  geom_text(aes(label = count), stat = "identity", vjust = -.5, color = "black") +
  scale_y_continuous(limits = c(0, 150)) +
  theme(plot.title = element_text(hjust = 0.5), 
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
  labs(x = "Genre", 
       y = "Number of Publishers", 
       title = "Publishers' Most-Produced Genres") +
  scale_fill_manual(values = colorscale, guide = "none")
save(savable, file = here("plots", "genre_v_publisher", "number_one_genre.rda"))
ggsave(here("plots", "genre_v_publisher", "number_one_genre.png"))
savable
```

Which genre gets the most support on each console?

```{r}
console_colorscale <- c("PC" = "darkslategray",
                    "XB" = "green",
                    "X360" = "olivedrab2",
                    "XOne" = "chartreuse3",
                    "XS" = "darkgreen",
                    "PS2" = "blue",
                    "PS3" = "dodgerblue",
                    "PS4" = "navy",
                    "PS5" = "purple4",
                    "PSP" = "purple", 
                    "DS" = "black",
                    "3DS" = "brown",
                    "Wii" = "cyan",
                    "WiiU" = "cyan3",
                    "NS" = "red",
                    "And" = "yellow",
                    "Mobile" = "orange")

consoles_by_genres <- master %>%
  group_by(Console, Genre) %>%
  filter(Console %in% c("XB", "PS2", "DS", "3DS", "Wii", "NS", "PS3", "PS4", "X360", "XOne", "PSP", "WiiU", "And", "Mobile")) %>%
  filter(Genre != "Misc") %>%
  summarize(Genre.Amount = n()) %>%
  arrange(desc(Genre.Amount)) %>%
  ungroup() %>%
  complete(Console, Genre, fill = list(Genre.Amount = 0)) %>% 
  replace_na(list(Genre.Amount = 0))


savable <- ggplot(consoles_by_genres, aes(x = Console, y = Genre, fill = Genre.Amount)) +
  geom_tile() +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
  scale_fill_gradient2(low = "white", mid = "green", high = "darkgreen", midpoint = 250) +
  labs(x = "Consoles", 
       y = "Genres", 
       fill = "Genres", 
       title = "Heatmap of Most Supported Genre on Each Console")

save(savable, file = here("plots", "genre_v_release", "genre_release_heatmap.rda"))
ggsave(here("plots", "genre_v_release", "genre_release_heatmap.png"))
savable
```

On which consoles do publishers get the most sales?

```{r}
theme_set(theme_classic())

console_by_publisher_sales <- master %>% 
  group_by(Console, Publisher.Simple) %>% .[, c("Console", "Publisher.Simple", "Total.Sales")] %>%
  drop_na() %>% 
  filter(Publisher.Simple %in% c("Nintendo", "Electronic Arts", "Activision Blizzard", "Sony", "Ubisoft", "Bandai Namco", "THQ", "Sega", "Square Enix", "Konami", "Microsoft", "Capcom", "Rockstar Games", "Warner Bros", "2K Games")) %>% # Top 15 publishers
  filter(Console %in% c("PC", "XB", "PS2", "DS", "3DS", "Wii", "NS", "PS3", "PS4", "PS5", "X360", "XOne", "XS", "PSP", "WiiU", "And", "Mobile")) %>%
  summarize("Sum.Sales" = sum(Total.Sales), .groups = "drop") %>% ungroup() %>% complete(Console, Publisher.Simple, fill = list(Sum.Sales = 0)) %>% 
  replace_na(list(Sum.Sales = 0)) 

savable <- ggplot(console_by_publisher_sales, aes(x = Console, y = Publisher.Simple, fill = Sum.Sales)) +
  geom_tile() +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
  scale_fill_gradient2(low = "white", mid = "magenta", high = "purple", midpoint = 225, na.value = "white") +
  labs(x = "Console", 
       y = "Publisher", 
       fill = "Total Sales", 
       title = "Heatmap of Best-Performing Console Releases by Publisher")

save(savable, file = here("plots", "console_v_sales", "console_sales_heatmap.rda"))
ggsave(here("plots", "console_v_sales", "console_sales_heatmap.png"))
savable

# Best Performing Console Releases By Publisher Bar Graphs
console_performances_by_publisher <- function(publisher) {
  master[, c(3,4,5,8)] %>%
  filter(Console %in% c("PC", "XB", "PS2", "DS", "3DS", "Wii", "NS", "PS3", "PS4", "PS5", "X360", "XOne", "XS", "PSP", "WiiU", "And", "Mobile") & Publisher.Simple == publisher) %>%
  drop_na() %>%
  group_by(Console) %>%
    summarize(Console.Sales = sum(Total.Sales))
}

pub_performances_consoles_plot <- function(publisher) {
  ggplot(console_performances_by_publisher(publisher), aes(x = reorder(Console, -Console.Sales), y = Console.Sales, fill = Console)) + geom_bar(stat = "identity", position = position_dodge()) + theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) + labs(x = "Console", y = "Sales", title = paste(publisher, " Sales By Console")) + scale_fill_discrete(guide="none") + scale_fill_manual(values = console_colorscale, guide = "none")
}

save_pub_performance <- function(publisher) {
  pub_performances_consoles_plot(publisher)
  publisher %<>% tolower() %>% str_replace_all(" ", "_")
  save(savable, file = here("plots", "console_v_sales", paste(publisher, "_sales_by_console.rda", sep = "")))
  ggsave(here("plots", "console_v_sales", paste(publisher, "_sales_by_console.png", sep = "")))
  savable
}

save_pub_performance("Nintendo")
save_pub_performance("Electronic Arts")
save_pub_performance("Activision Blizzard")
save_pub_performance("Sony")
save_pub_performance("Ubisoft")
save_pub_performance("Bandai Namco")
save_pub_performance("THQ")
save_pub_performance("Sega")
save_pub_performance("Square Enix")
save_pub_performance("Konami")
save_pub_performance("Microsoft")
save_pub_performance("Capcom")
save_pub_performance("Rockstar Games")
save_pub_performance("Warner Bros")
save_pub_performance("2K Games")
```

On which consoles do publishers produce the most games?

```{r}
consoles_by_publisher <- master %>%
  group_by(Console, Publisher.Simple) %>%
  filter(Console %in% c("PC", "XB", "PS2", "DS", "3DS", "Wii", "NS", "PS3", "PS4", "PS5", "X360", "XOne", "XS", "PSP", "WiiU", "And", "Mobile")) %>%
  filter(Publisher.Simple %in% c("Nintendo", "Electronic Arts", "Activision Blizzard", "Sony", "Ubisoft", "Bandai Namco", "THQ", "Sega", "Square Enix", "Konami", "Microsoft", "Capcom", "Rockstar Games", "Warner Bros", "2K Games")) %>% # Top 15 publishers
  summarize(Releases = n()) %>%
  arrange(desc(Releases)) %>%
  ungroup() %>%
  complete(Console, Publisher.Simple, fill = list(Releases = 0)) %>% 
  replace_na(list(Releases = 0))


savable <- ggplot(consoles_by_publisher, aes(x = Console, y = Publisher.Simple, fill = Releases)) +
  geom_tile() +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
  scale_fill_gradient2(low = "white", mid = "orange", high = "red", midpoint = 250) + 
  labs(x = "Consoles", 
       y = "Publishers", 
       fill = "Game Releases", 
       title = "Heatmap of Most Supported Consoles by Each Publisher")

save(savable, file = here("plots", "console_v_release", "console_release_heatmap.rda"))
ggsave(here("plots", "console_v_release", "console_release_heatmap.png"))
savable

# Console Releases By Publisher Bar Graphs
console_releases_by_publisher <- function(publisher) {
  master[, c(3,4,5,8)] %>%
  filter(Console %in% c("PC", "XB", "PS2", "DS", "3DS", "Wii", "NS", "PS3", "PS4", "PS5", "X360", "XOne", "XS", "PSP", "WiiU", "And", "Mobile") & Publisher.Simple == publisher) %>%
  drop_na() %>%
  group_by(Console) %>%
    summarize(Releases = n())
}

pub_supported_consoles_plot <- function(publisher) {
  ggplot(console_releases_by_publisher(publisher), aes(x = reorder(Console, -Releases), y = Releases, fill = Console)) + geom_bar(stat = "identity", position = position_dodge()) + theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) + labs(x = "Console", y = "Releases", title = paste(publisher, " Releases By Console")) + scale_fill_discrete(guide="none") + scale_fill_manual(values = console_colorscale, guide = "none")
}

save_pub_supported <- function(publisher){
  pub_supported_consoles_plot(publisher)
  publisher %<>% tolower() %>% str_replace_all(" ", "_")
  save(savable, file = here("plots", "console_v_release", paste(publisher, "_releases_by_console.rda", sep = "")))
  ggsave(here("plots", "console_v_release", paste(publisher, "_releases_by_console.png", sep = "")))
  savable
}

save_pub_supported("Nintendo")
save_pub_supported("Electronic Arts")
save_pub_supported("Activision Blizzard")
save_pub_supported("Sony")
save_pub_supported("Ubisoft")
save_pub_supported("Bandai Namco")
save_pub_supported("THQ")
save_pub_supported("Sega")
save_pub_supported("Square Enix")
save_pub_supported("Konami")
save_pub_supported("Microsoft")
save_pub_supported("Capcom")
save_pub_supported("Rockstar Games")
save_pub_supported("Warner Bros")
save_pub_supported("2K Games")
```
